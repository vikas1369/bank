server.port=9001
spring.cassandra.contact-points=127.0.0.1
spring.cassandra.port=9042
spring.cassandra.keyspace-name=mykeyspace


spring.cloud.function.definition=distributorFunction;justProducer;justConsumer
spring.cloud.stream.kafka.binder.brokers=pkc-4r087.us-west2.gcp.confluent.cloud:9092

#With below configuration if using stream bridge we send the message on the topic_loan
#Then it will be published on the topic investment the function can be used to
#perform some intermediate operation
spring.cloud.stream.bindings.distributorFunction-in-0.destination=topic_loan
spring.cloud.stream.bindings.distributorFunction-out-0.destination=topic_investment

#Below configuration is just to prove that we can send message using stream bridge on kafka
#output channel and then receive at the consumer stream's input channel
spring.cloud.stream.bindings.justProducer-out-0.destination=topic_out_producer
spring.cloud.stream.bindings.justConsumer-in-0.destination=topic_out_producer

#This property specifies to use native encoding of kafka for serialization and de serialization with by default is string based
spring.cloud.stream.bindings.justProducer-out-0.producer.useNativeEncoding=true

#To be specific we can define following two properties as well
#spring.cloud.stream.kafka.bindings.justProducer-out-0.producer.configuration.value.serializer=org.apache.kafka.common.serialization.StringSerializer
#spring.cloud.stream.kafka.bindings.justConsumer-in-0.consumer.configuration.value.deserializer=org.apache.kafka.common.serialization.StringDeserializer

#earliest will read the message from 0th offset latest will read only from the latest offset
spring.kafka.consumer.auto-offset-reset=latest

spring.kafka.consumer.properties.spring.json.trusted.packages=*

management.endpoint.metrics.enabled=true
management.endpoint.prometheus.enabled=true
management.prometheus.metrics.export.enabled=true
#management.server.port=5000
management.endpoints.web.exposure.include= health,info,metrics,prometheus
management.security.enabled=false
management.endpoint.health.show-details=always
management.endpoints.web.base-path=/

#logging.pattern.level=%5p [${spring.application.name:},%X{traceId:-},%X{spanId:-}]

#Following property enables the tracing in spring boot app
management.tracing.propagation.type=B3,W3C